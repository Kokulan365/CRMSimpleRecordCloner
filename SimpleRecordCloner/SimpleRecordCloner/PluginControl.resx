<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>