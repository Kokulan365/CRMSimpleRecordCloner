<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wdqnBBpVW0+1wAAAABJRU5ErkJggg==
</value>
  </data>
</root>